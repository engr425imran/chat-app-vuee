<template>
  <div class="main">
    <div class="form-div">
      <img :src="getImage" height="60" />
      <input
        type="text"
        v-model="user.firstName"
        class="input"
        placeholder="First Name"
      />
      <input
        type="text"
        v-model="user.lastName"
        class="input"
        placeholder="Last Name"
      />
      <input
        type="email"
        v-model="user.email"
        class="input"
        placeholder="email"
      />
      <input
        type="password"
        v-model="user.password"
        class="input"
        placeholder="password"
      />
      <input
        type="password"
        v-model="user.password_confirmation"
        class="input"
        placeholder="confirm password"
      />
      <input
        type="text"
        v-model="user.countryCode"
        class="input"
        placeholder="country code"
      />
      <input
        type="number"
        v-model="user.number"
        class="input"
        placeholder="Number"
      />
      <img :src="previewImage" class="uploading-image" />
      <input type="file" @change="previewFiles" class="input" />
      <p style="color: #b00020; margin-left: 50px">{{ getErrorMessage }}</p>
      <button @click="registerUserTo()" class="submit-btn">
        Register
        <v-progress-circular
          v-if="getLoadingStatus"
          :size="30"
          :width="3"
          color="purple"
          indeterminate
        ></v-progress-circular>
      </button>
      <button @click="cb()" class="submit-btn">check</button>
    </div>
  </div>
</template>

<script>
import { mapActions, mapGetters } from "vuex";
import axios from "axios";

export default {
  data() {
    return {
      previewImage: null,
      path: require("@/assets/logo.png"),
      file: null,
      user: {
        firstName: "",
        lastName: "",
        email: "",
        password: "",
        password_confirmation: "",
        countryCode: "",
        number: "",
      },
    };
  },
  computed: {
    ...mapGetters("auth", ["getLoadingStatus", "getErrorMessage", "getUser"]),
    ...mapGetters("register", ["getImage"]),
  },
  methods: {
    ...mapActions("register", ["registerUser", "regiterUserCometChat"]),
    registerUserTo() {
      this.registerUser(this.user);
    },
    registerToComet() {
      this.regiterUserCometChat();
    },
    previewFiles(event) {
      console.log(event.target.files[0]);
      const image = event.target.files[0];
      const reader = new FileReader();
      reader.readAsDataURL(image);
      reader.onload = (e) => {
        this.previewImage = e.target.result;
        console.log(this.previewImage);
      };
      let config = {
        header: {
          "Content-Type": "image/png",
        },
      };
      const data = new FormData();
      data.append("file", this.previewImage);
      axios
        .post("http://localhost:8000/api/up", data, config)
        .then((res) => {
          console.log(res.data);
        })
        .catch((e) => console.log(e));
      // this.file = event.target.files[0];
    },
    checkk() {
      const data = new FormData();
      data.append("file", "");
      axios
        .post("http://localhost:8000/api/up", data)
        .then((res) => {
          console.log(res.data);
        })
        .catch((e) => console.log(e));
    },
    cb() {
      const reader = new FileReader();
      console.log(reader);
      const path = require("@/assets/logo.png");
      console.log(path);

      const edit = reader.readAsDataURL(path);
      console.log(edit);

      const pathh = require("@/assets/logo.png");
      console.log(pathh);
    },
  },
};
</script>

<style scoped>
.main {
  margin: 10px;
  background-color: brown;
  position: relative;
}
.form-div {
  padding: 20px;
  background-color: aqua;
  width: 400px;
  position: relative;
  margin: 20px auto;
}
.input {
  margin-top: 10px;
  margin-left: 50px;
  padding: 10px;
  width: 250px;
  border: 1px solid black;
  /* background-color: rgb(12, 7, 7); */
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.submit-btn {
  margin-top: 10px;
  background-color: black;
  padding: 8px;
  margin-left: 50px;
  color: white;
  width: 250px;
  border-radius: 10px;
}
</style>
